# onecoin_logic.py
import html
from aiogram import Router, Bot, F # Bot –¥–æ–±–∞–≤–ª–µ–Ω –¥–ª—è send_telegram_log
from aiogram.filters import Command
from aiogram.types import Message
# hlink –£–î–ê–õ–ï–ù, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è get_user_mention_html
from typing import Optional
from achievements_logic import check_and_grant_achievements 

import database
from utils import get_user_mention_html, send_telegram_log # –ò–º–ø–æ—Ä—Ç –∏–∑ utils
# Config –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é, –Ω–æ –º–æ–∂–µ—Ç –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è –¥–ª—è send_telegram_log, –µ—Å–ª–∏ bot –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –±–µ–∑ Config
# from config import Config # <-- –ï—Å–ª–∏ –±—ã Config –Ω—É–∂–µ–Ω –±—ã–ª –∑–¥–µ—Å—å

onecoin_router = Router()

# –õ–æ–∫–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è get_user_mention_link_from_db –£–î–ê–õ–ï–ù–ê
# –í–º–µ—Å—Ç–æ –Ω–µ–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è get_user_mention_html –∏–∑ utils.py

@onecoin_router.message(Command("myonecoins", "balance", "–º–æ–π–±–∞–ª–∞–Ω—Å", "–º–æ–∏onecoins", ignore_case=True))
async def my_onecoins_command(message: Message, bot: Bot): # bot –¥–æ–±–∞–≤–ª–µ–Ω –¥–ª—è send_telegram_log
    if not message.from_user:
        await message.reply("–ù–µ –º–æ–≥—É –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        return

    user_id = message.from_user.id
    chat_id = message.chat.id
    user_link = get_user_mention_html(user_id, message.from_user.full_name, message.from_user.username)

    try:
        balance = await database.get_user_onecoins(user_id, chat_id)
        await message.reply(f"{user_link}, –≤–∞—à –±–∞–ª–∞–Ω—Å –≤ —ç—Ç–æ–º —á–∞—Ç–µ: <b>{balance}</b> OneCoin(s).",
                             disable_web_page_preview=True) #–ü—Ä–µ–≤—å—é —É–±—Ä–∞—Ç—å 
        # --- –í–´–ó–û–í –ü–†–û–í–ï–†–ö–ò –î–û–°–¢–ò–ñ–ï–ù–ò–ô ---
        await check_and_grant_achievements(
            user_id,
            chat_id,
            bot,
            current_onecoin_balance=balance # –ü–µ—Ä–µ–¥–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å OneCoin
        )
        
    except Exception as e:
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–ª–∞–Ω—Å–∞ OneCoin.")
        await send_telegram_log(bot, f"üî¥ –û—à–∏–±–∫–∞ –≤ /myonecoins –¥–ª—è {user_link} –≤ —á–∞—Ç–µ {chat_id}: <pre>{html.escape(str(e))}</pre>")


@onecoin_router.message(Command("toponecoins_chat", "—Ç–æ–ø–º–æ–Ω–µ—Ç—á–∞—Ç–∞", "—Ç–æ–ø–≤–∞–Ω–∫–æ–∏–Ω–æ–≤—á–∞—Ç", ignore_case=True))
async def top_onecoins_chat_command(message: Message, bot: Bot): # bot –¥–æ–±–∞–≤–ª–µ–Ω
    chat_id = message.chat.id
    chat_title_header = html.escape(message.chat.title or f"—ç—Ç–æ–º —á–∞—Ç–µ ({chat_id})")

    try:
        top_users_coins = await database.get_top_onecoins_in_chat(chat_id, limit=10)

        if not top_users_coins:
            return await message.reply(f"–í —á–∞—Ç–µ {chat_title_header} –ø–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ OneCoin –±–∞–ª–∞–Ω—Å–∞—Ö –¥–ª—è —Ç–æ–ø–∞.")

        response_lines = [f"<b>üèÜ –¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ OneCoin –≤ {chat_title_header}:</b>"]
        for i, user_data in enumerate(top_users_coins):
            user_link_text = get_user_mention_html(user_data['user_id'], user_data['full_name'], user_data.get('username'))
            response_lines.append(f"{i + 1}. {user_link_text} - <code>{user_data['onecoins']}</code> OneCoin(s)")
        await message.reply("\n".join(response_lines), disable_web_page_preview=True)
    except Exception as e:
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ —Ç–æ–ø–∞ OneCoin –≤ —á–∞—Ç–µ.")
        await send_telegram_log(bot, f"üî¥ –û—à–∏–±–∫–∞ –≤ /toponecoins_chat (—á–∞—Ç ID {chat_id}): <pre>{html.escape(str(e))}</pre>")


@onecoin_router.message(Command("toponecoins_global", "–≥–ª–æ–±–∞–ª—å–Ω—ã–π—Ç–æ–ø–º–æ–Ω–µ—Ç", "—Ç–æ–ø–≤–∞–Ω–∫–æ–∏–Ω–æ–≤–≥–ª–æ–±–∞–ª", ignore_case=True))
async def top_onecoins_global_command(message: Message, bot: Bot): # bot –¥–æ–±–∞–≤–ª–µ–Ω
    try:
        top_global_coins_users = await database.get_global_top_onecoins(limit=10)

        if not top_global_coins_users:
            return await message.reply("–í –≥–ª–æ–±–∞–ª—å–Ω–æ–º —Ç–æ–ø–µ OneCoin –ø–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö.")

        response_lines = ["<b>üåç –ì–ª–æ–±–∞–ª—å–Ω—ã–π –¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ OneCoin:</b>"]
        for i, user_data in enumerate(top_global_coins_users):
            user_link_text = get_user_mention_html(user_data['user_id'], user_data['full_name'], user_data.get('username'))
            chat_display_info = ""
            chat_title_record = user_data.get('chat_title')
            telegram_chat_link_record = user_data.get('telegram_chat_link')
            user_id_record = user_data.get('user_id')
            chat_id_record = user_data.get('chat_id')

            if chat_title_record:
                chat_title_escaped = html.escape(chat_title_record)
                is_private_chat_indicator = f"–õ–∏—á–Ω—ã–π —á–∞—Ç ({user_id_record})"
                if chat_id_record == user_id_record or chat_title_record == is_private_chat_indicator :
                     chat_display_info = " (–≤ –õ–∏—á–Ω–æ–º —á–∞—Ç–µ)"
                elif telegram_chat_link_record:
                    chat_display_info = f" (–∏–∑ <a href=\"{telegram_chat_link_record}\">{chat_title_escaped}</a>)"
                else:
                    chat_display_info = f" (–≤ —á–∞—Ç–µ {chat_title_escaped})"
            response_lines.append(f"{i + 1}. {user_link_text} - <code>{user_data['onecoins']}</code> OneCoin(s){chat_display_info}")
        await message.reply("\n".join(response_lines), disable_web_page_preview=True)
    except Exception as e:
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Ç–æ–ø–∞ OneCoin.")
        await send_telegram_log(bot, f"üî¥ –û—à–∏–±–∫–∞ –≤ /toponecoins_global: <pre>{html.escape(str(e))}</pre>")


def setup_onecoin_handlers(dp):
    dp.include_router(onecoin_router)
    print("–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ OneCoin –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")